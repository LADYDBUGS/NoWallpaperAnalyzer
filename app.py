import streamlit as st
import requests
import base64

# Remplace par ta cl√© API xAI (obtiens-la sur https://x.ai/api)
API_KEY = os.getenv("API_KEY")
API_URL = "https://api.x.ai/v1/chat/completions"  # V√©rifie dans les docs xAI

st.title("Analyse de Personnalit√© par Fond d'√âcran Grok üöÄ")
st.markdown("Upload ton capture d'√©cran de home screen, et Grok analysera ta personnalit√© de mani√®re fun !")

uploaded_file = st.file_uploader("Choisis ta capture d'√©cran", type=["jpg", "png", "jpeg"])

if uploaded_file is not None:
    st.image(uploaded_file, caption="Ton √©cran upload√©", use_column_width=True)
    if st.button("Analyse Ma Personnalit√© !"):
        image_bytes = uploaded_file.getvalue()
        base64_image = base64.b64encode(image_bytes).decode('utf-8')
        prompt = f"""
        Analyse ce fond d'√©cran et interface de t√©l√©phone pour d√©duire la personnalit√© de l'utilisateur de mani√®re fun et d√©taill√©e‚Äîcomme un profil psychologique. 
        Inclu des sections sur le profil global, les d√©tails cl√©s (wallpaper, widgets, apps), forces/faiblesses, et un r√©sum√©. 
        Rends-le engageant et subjectif pour rigoler. Voici l'image en base64 : data:image/png;base64,{base64_image}
        """
        headers = {"Authorization": f"Bearer {API_KEY}", "Content-Type": "application/json"}
        payload = {"model": "grok-4", "messages": [{"role": "user", "content": prompt}], "max_tokens": 1000}
        try:
            response = requests.post(API_URL, headers=headers, json=payload)
            if response.status_code == 200:
                analysis = response.json()["choices"][0]["message"]["content"]
                st.markdown("### Analyse de Grok :")
                st.write(analysis)
            else:
                st.error(f"Erreur API : {response.text}")
        except Exception as e:
            st.error(f"Oups : {str(e)}")

st.markdown("Propuls√© par Grok de xAI. Pour les d√©tails API, visite [x.ai/api](https://x.ai/api).")
